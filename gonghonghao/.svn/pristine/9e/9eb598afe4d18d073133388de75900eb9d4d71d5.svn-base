<template>
    <div class="bindPhone">
        <van-cell-group>
            <van-field v-model="phone" placeholder="请输入手机号码"/>
            <van-field v-model="code" center clearable placeholder="请输入验证码">
                <van-button slot="button" plain type="info" size="small" @click="onCode">{{codeData}}</van-button>
            </van-field>
        </van-cell-group>
        <div class="btn">
            <van-button type="info" round block @click="onBind">确认绑定</van-button>
        </div>
    </div>
</template>

<script>
import api from "../api";
import commonUtil from '@/assets/js/commonUtil.js';
export default {
    name: 'bindPhone',
    data() {
        return {
            phone: "",
            code: "",
            flag: false,
            s: 250,
            codeData: "获取验证码",
            openId: ''
        }
    },
    created() {
        //用户的openId
        let openId = this.$route.query.openId;
        console.log(openId)
        this.openId = openId;
    },
    activated() {

    },
    methods: {
        onCode() {
            // 获取验证码
            var _this = this;
            if (this.flag) {
                return;
            }
            if (!this.phone) {
                this.$toast("请输入手机号");
                return;
            }
            if (!/^1[345789]\d{9}$/.test(this.phone)) {
                this.$toast("手机号码有误，请重填");
                return;
            }
            _this.flag = true;
            var timer;
            api.getCaptcha({
                telephone: this.phone
            })
            .then(res => {
                if (res.code === 200) {
                _this.code = res.data;
                _this.$toast("发送成功！");
                // 倒计时
                timer = setInterval(function () {
                    _this.s--;
                    if (_this.s === 0) {
                        _this.codeData = "重新发送验证码";
                        clearInterval(timer);
                        _this.s = 250;
                        _this.flag = false;
                    } else {
                        _this.codeData = _this.s + "s重新获取";
                    }
                }, 1000);
                } else {
                    _this.$toast(res.msg);
                    _this.s = 250;
                    _this.flag = false;
                }
            });
        },
        onBind() {
            let _this = this;
            // 确认绑定
            //校验参数不能为空
            if (!this.phone) {
                this.$toast("请输入手机号");
                return;
            }
            if (!/^1[345789]\d{9}$/.test(this.phone)) {
                this.$toast("手机号码有误，请重填");
                return;
            }
            if (!this.code) {
                this.$toast("请输入验证码");
                return;
            }

            api.bindTelephone({
                openId:this.openId,
                telephone:this.phone,
                msgCode:this.code,
            }).then(res => {
                if(res.code == 200){
                    //操作成功,获取返回的用户信息以及token
                    localStorage.setItem("ende-ecology-toke", res.data.token)
                    localStorage.setItem("ende-ecology-userinfo",JSON.stringify(res.data.user))
                    setTimeout(function() {
                        _this.$toast("操作成功");
                        var productId = commonUtil.parseUrlParams('productId')
                        _this.$store.commit("onProductId", productId);
                        _this.$router.push({ path: "/" });
                    },600)
                }else {
                    //操作失败,弹出吐司
                    _this.$toast(res.msg);
                }
            });
        }

    }
}
</script>
<style scoped>
    .bindPhone {
        height: 100%;
        background: #fff;
        padding: 1rem;
    }

    .btn {
        margin: 3.6rem 1.2rem 0 1.2rem;
    }
</style>
